package Tasks.BinarySearch;

/*
 * https://binarysearch.io/problems/Most-Frequent-Number-in-Intervals
 *
 * not solved (need to be more fast)
 *
 */

import java.util.Arrays;

public class MostFrequentNumberInIntervals {
    public static void main(String[] args) {
        int[][] intervals0 = {{1, 4}, {3, 5}, {6, 9}, {7, 9}};
        int[][] intervals1 = {{2045329993, 2082879675},{1669711367, 1969360250},{1661538773, 1944927418},{1719261948, 1800728179},{869627400, 906595407},{2109603200, 2115323828},{69752508, 1289890544},{1380227116, 1613794036},{2100875583, 2119434491},{221553141, 2005329932},{1231836600, 1764768908},{1297623157, 1605370334},{494978930, 1764327028},{1574055840, 1864769133},{1527540541, 1956237651},{1819299303, 2126626581},{1747737104, 2002776938},{357041931, 930355290},{1893603322, 2040545462},{71984042, 1948176888},{727101247, 1416434799},{366853413, 531503785},{594998305, 1515173134},{723362859, 1416256730},{1662262433, 2110935994},{43459744, 436302039},{1076176563, 1810048320},{1680589135, 1735227626},{1803816080, 2141599210},{2140389048, 2146874096},{1697683006, 2128087349},{1478045685, 1678870046},{1928848799, 1984396748},{1835417461, 1968418014},{2070496106, 2115116113},{1222621207, 1793653514},{895167511, 1514619297},{2007132381, 2060459693},{838243341, 1249838046},{1971084745, 2081842622},{61305170, 162026178},{1502342503, 1573279605},{894781229, 1412824752},{85323199, 1801088932},{731075629, 1093366936},{481451356, 1754313548},{2031061828, 2060456724},{96718440, 1899618842},{1054738210, 2081037782},{1711186074, 1916195445},{432125536, 822090200},{918734120, 1642122760},{2024622132, 2110987887},{603580884, 1762861899},{103927851, 885935019},{1450152558, 1657638097},{2090736571, 2111757467},{834240559, 1532983005},{2095677225, 2124755163},{651044331, 1589224522},{1529863112, 1624086875},{1085692165, 1809792338},{661706673, 1493411518},{1518418850, 1964731423},{1880599684, 1970421584},{2101224821, 2125577370},{1323042695, 2103612010},{1461873130, 1775632643},{325654308, 1576565502},{338641575, 1981288568},{1437550149, 1711075355},{2058692743, 2096213217},{280376765, 1403047266},{1266924291, 1278673844},{1339257396, 1343309459},{584179716, 2022439944},{582132085, 631395604},{707019784, 1969264404},{1001034442, 1374202556},{1960849893, 2080989951},{1123205981, 1840112095},{47091211, 1615462413},{1083324642, 1149197209},{775570545, 2052771014},{1206522650, 1580725852},{436639880, 2011743523},{2099051338, 2116262561},{1965910973, 2018397114},{1579836724, 1915971314},{2061415776, 2069790567},{639372734, 1480660239},{200278290, 2070360311},{1979745654, 2107514370},{285315101, 463087882},{720660593, 2145431347},{627900473, 1602783894},{1766472195, 1883861623},{1748031488, 1749569321},{1045387223, 1807222312},{2029694645, 2139512631}};

        System.out.println(solve(intervals0)); // 3
        System.out.println(solve(intervals1)); // 1339257396

    }

    private static int solve(int[][] intervals) {
        int min = intervals[0][0];
        int max = intervals[0][0];

        for (int[] interval : intervals) {
            int[] temp = interval.clone();
            Arrays.sort(temp);
            min = Math.min(min, temp[0]);
            max = Math.max(max, temp[1]);
        }
        System.out.println(min + " " + max);

        int ans = max;
        int maxFrequency = 0;

        for (int i = max; i >= min; i--) {
            int currentFrequency = 0;
            for (int[] interval : intervals) {
                if (i >= interval[0] && i <= interval[1]) {
                    currentFrequency++;
                }
            }
            if (currentFrequency >= maxFrequency) {
                maxFrequency = currentFrequency;
                ans = i;
            }
        }
        return ans;
    }
}